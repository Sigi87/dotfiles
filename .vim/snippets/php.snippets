snippet authz
	\IDMObject::authZ( '${1:role}', '${2:role_name}' )
snippet banner
	\PSU::db('banner')
snippet bannerex
	\PSU::db('banner')->Execute( $${1:sql}, $${2:args} );
snippet dbug
	\PSU::dbug($${1:variable});
snippet matt
	if( \PSU::is('matt') ) {
		${1:// tootsweets}
	}//end if
snippet myplymouth
	\PSU::db('myplymouth')
snippet pdb banner
	\PSU::db('banner')
snippet pdb psc1
	\PSU::db('psc1')
snippet pdb test
	\PSU::db('test')
snippet pdb myplymouth
	\PSU::db('myplymouth')
snippet pdb portal
	\PSU::db('portal')
snippet pdb idm
	\PSU::db('idm')
snippet portal
	\PSU::db('portal')
snippet psc1
	\PSU::db('psc1')
snippet test
	\PSU::db('test')
snippet respond NO_ROUTE
	respond( function( $request, $response, $${1:app} ) {
		${2:// bork}
	});
snippet respond NO_HTTP
	respond( '/${1:route}', function( $request, $response, $${2:app} ) {
		${3:// bork}
	});
snippet respond ALL_THE_THINGS
	respond( '${1:GET}', '/${2:route}', function( $request, $response, $${3:app} ) {
		${4:// bork}
	});
snippet GET
	respond( 'GET', '/${1:route}', function( $request, $response, $${2:app} ) {
		${3:// bork}
	});
snippet POST
	respond( 'POST', '/${1:route}', function( $request, $response, $${2:app} ) {
		${3:// bork}
	});
snippet sql SELECT
	$${1:sql} = "
		SELECT ${2:*}
		  FROM ${3:table}
	";
snippet sql INSERT
	$${1:sql} = "
		INSERT INTO ${2:table} (
			${3:field}
		) VALUES (
			${4:data}
		)
	";
snippet sql DELETE
	$${1:sql} = "
		DELETE FROM ${2:table} 
		 WHERE ${3:field} = ${4:value}
	";
snippet sql UPDATE
	$${1:sql} = "
		UPDATE ${2:table} 
			 SET ${3:field} = ${4:value}
	";
snippet sql MERGE
	$${1:sql} = "
	MERGE INTO ${2:target_table} target
	USING (
	  SELECT :${3:field1} ${4:alias1},
		       :${5:field2} ${6:alias2}
		  FROM dual
	) source
	ON (
		target.${7:field1} = source.${8:field1}
	)
	WHEN MATCHED THEN 
		UPDATE SET target.${9:field2} = source.${10:field2}
	WHEN NOT MATCHED THEN
		INSERT (
			target.${11:field1}, 
			target.${12:field2}
		) VALUES (
			source.${13:field1}, 
			source.${14:field2}
		)
	";
snippet results
	foreach( $${1:results} as $${2:row} ) {
		${3:// code}
	}//end foreach
