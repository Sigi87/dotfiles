snippet req "require"
require __DIR__ . '/${1:file}.php';
endsnippet

snippet req "require_once"
require_once __DIR__ . '/${1:file}.php';
endsnippet

snippet inc "include"
include __DIR__ . '/${1:file}.php';
endsnippet

snippet inc "include_once"
include_once __DIR__ . '/${1:file}.php';
endsnippet

snippet ro "debug robot"
do_action( 'debug_robot', "${1:message}" );
endsnippet

snippet pro "debug robot print_r"
do_action( 'debug_robot', '$1 :: ' . print_r( ${1:var}, TRUE ) );
endsnippet

snippet func "Standard function"
/**
 * ${4:intelligent comment}
 */
${1:public }function ${2:name}(${3: $var })
{
	$0
}//end $2
endsnippet

snippet sin "A singleton function"
/**
 * singleton funciton
 */
function `!p snip.rv = t[1].lower()`()
{
	global $`!p snip.rv = t[1].lower()`;

	if ( ! $`!p snip.rv = t[1].lower()` )
	{
		$`!p snip.rv = t[1].lower()` = new ${1:class};
	}//end if

	return $`!p snip.rv = t[1].lower()`;
}//end `!p snip.rv = t[1].lower()`
endsnippet

snippet class "Gigaom class"
class ${1:class}
{
	/**
	 * constructor
	 */
	public function __construct()
	{
		$0
	}//end __construct
}//end class

/**
 * singleton function
 */
function `!p snip.rv = t[1].lower()`()
{
	global $`!p snip.rv = t[1].lower()`;

	if ( ! $`!p snip.rv = t[1].lower()` )
	{
		$`!p snip.rv = t[1].lower()` = new $1;
	}//end if

	return $`!p snip.rv = t[1].lower()`;
}//end `!p snip.rv = t[1].lower()`
endsnippet

snippet class "Gigaom plugin class"
class ${1:class}
{
	/**
	 * constructor
	 */
	public function __construct()
	{
		$0
	}//end __construct
}//end class

/**
 * singleton function
 */
function `!p snip.rv = t[1].lower()`()
{
	global $`!p snip.rv = t[1].lower()`;

	if ( ! $`!p snip.rv = t[1].lower()` )
	{
		$`!p snip.rv = t[1].lower()` = new $1;
	}//end if

	return $`!p snip.rv = t[1].lower()`;
}//end `!p snip.rv = t[1].lower()`
endsnippet

snippet class "Gigaom plugin class with init action"
class ${1:class}
{
	/**
	 * constructor
	 */
	public function __construct()
	{
		add_action( 'init', array( $this, 'init' ) );
	}//end __construct

	/**
	 * hooked into the init action
	 */
	 public function init()
	 {
	 }//end init
}//end class

/**
 * singleton function
 */
function `!p snip.rv = t[1].lower()`()
{
	global $`!p snip.rv = t[1].lower()`;

	if ( ! $`!p snip.rv = t[1].lower()` )
	{
		$`!p snip.rv = t[1].lower()` = new $1;
	}//end if

	return $`!p snip.rv = t[1].lower()`;
}//end `!p snip.rv = t[1].lower()`
endsnippet

snippet add "Add action"
add_action( '${1:action}', array( $this, '$1' ) );
endsnippet

snippet func "Action function"
/**
 * Hooked to the $2 action
 */
${1:public }function ${2:name}(${3: vars })
{
	$0
}//end $2
endsnippet

snippet add "Add filter"
add_filter( '${1:filter}', array( $this, '$1' ) );
endsnippet

snippet func "Filter function"
/**
 * Hooked to the $2 filter
 */
${1:public }function ${2:name}( $${3:var} )
{
	return $${3};
}//end $2
endsnippet

snippet for "For loop"
for ( ${1:index}; ${2:conditional}; ${3:increment} )
{
	$0
}//end for
endsnippet

snippet foreach "Foreach"
foreach ( $${1:from} as $${2:var} )
{
	$0
}//end foreach
endsnippet

snippet foreach "Foreach with key"
foreach ( $${1:from} as $${2:key} => $${3:var} )
{
	$0
}//end foreach
endsnippet

snippet while "While loop"
while ( ${1:conditional} )
{
	$0
}//end while
endsnippet

snippet if "If conditional"
if ( ${1:conditional} )
{
	$0
}//end if
endsnippet

snippet elseif "Elseif conditional"
elseif ( ${1:conditional} )
{
	$0
}//end elseif
endsnippet

snippet else "Else"
else
{
	$0
}//end else
endsnippet
